/* stylelint-disable scss/at-extend-no-missing-placeholder */

@use "App.scss";

$open-anim-duration: 0.5s;

#expl-window-container {
    width: 0;
    height: 0;
    position: fixed;
    background-color: white;
    box-shadow: 0 0 30px 5px rgba(0 0 0 / 0.5);
    z-index: 10;

    &.grow {
        animation: $open-anim-duration grow forwards;
    }

    @mixin fade-in($name, $from, $to) {
        @keyframes #{$name} {
            from {
                opacity: $from
            }

            to {
                opacity: $to
            }
        }
    }

    @keyframes fade-out {
        from {
            left: 50%;
            top: 50%;
            opacity: 1
        }

        to {
            left: 50%;
            top: 50%;
            opacity: 0
        }
    }

    &.fade-out {
        width: 40em;
        height: 28em;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        animation: 0.5s fade-out forwards;
    }

    #expl-window-bg {
        position: absolute;
        background-image: url("../public/bg.jpg");
        background-size: 79em;
        opacity: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;

        @include fade-in(fade-in-bg, 0,  0.3);

        animation: $open-anim-duration * 2 fade-in-bg forwards;
    }

    #close-button {
        position: absolute;
        font-size: 2.5rem;
        line-height: 2rem;
        margin: 0;
        top: 2rem;
        right: 2rem;
        font-weight: 500;
        transform: scaleY(0.8);
        z-index: 20;
        transition: transform 0.3s;

        @include fade-in(fade-in-fg,  0, 1);

        animation: $open-anim-duration fade-in-fg forwards;

        &:hover {
            transform: scale(1.25, 1);
            cursor: pointer;
        }
    }

    #expl-window {
        $color-change-dur: 0.5s;

        width: 100%;
        height: 100%;
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        opacity: 0;

        @include fade-in(fade-in-fg,  0, 1);

        animation: $open-anim-duration fade-in-fg forwards;

        @mixin draw-stroke-partial($name, $start-percentage) {
            @keyframes #{$name} {
                from {
                    $viewport-width-start: $start-percentage;
                    $viewport-width-end: $start-percentage;

                    clip-path: polygon($viewport-width-start 0, $viewport-width-end 0, $viewport-width-end 100%,
                            $viewport-width-start 100%);
                }

                to {
                    $viewport-width-start: $start-percentage;
                    $viewport-width-end: $start-percentage + 20%;

                    clip-path: polygon($viewport-width-start 0, $viewport-width-end 0, $viewport-width-end 100%,
                            $viewport-width-start 100%);
                }
            }
        }

        .headline-divisor, .headline-rule {
            font-size: 2.5em;
            font-weight: 700;
            line-height: 0;
            margin-bottom: 1.1em;
            margin-top: 0.7em;
        }

        #explanation {
            font-size: 1.1em;
            font-weight: 400;
            margin-bottom: 0.5em;
            width: 90%;
            text-align: center;
        }

        h1 {
            font-size: 3em;
        }

        .divisor, .not-divisor, .division-row, #demo7 h1 {
            line-height: 0.4em;
        }

        @mixin partial-stroke($delay, $start-percentage) {
            @extend .stroke-common;

            $viewport-width-start: $start-percentage;
            $viewport-width-end: $start-percentage;
            $anim-name: draw-stroke-partial-#{str-slice(#{$start-percentage}, 0, -2)};

            height: 3.5rem;
            transform: scaleX(5);
            left: 100%;
            translate: 0 calc(0.7em - 100%);
            clip-path: polygon($viewport-width-start 0, $viewport-width-end 0, $viewport-width-end 100%,
                    $viewport-width-start 100%);

            @include draw-stroke-partial($anim-name, $start-percentage);

            animation: $color-change-dur $anim-name forwards $delay;
        }

        #stroke-container {
            position: relative;
        }

        #demonstration1 {
            margin-block-start: 0;

            // overflow: hidden;

            #stroke-container {
                margin-top: 0.7em;
                line-height: 0.4em;

                span {
                    line-height: 0.4em;
                    padding: 0 0.2rem;
                }
            }

            &h1 {
                line-height: 0.4em;
            }

            .stroke {
                @include partial-stroke($open-anim-duration * 2, 20%);

                translate: 0 calc(1.0em - 100%);
                height: 5.2rem;
            }
        }

        #demonstration-digit-sum, #demonstration-last-n-digits, #demo7, #demonstration1 {
            #bg-stroke {
                height: 3.5rem !important;
                translate: -0.2rem -40% !important;
            }
        }

        #demonstration-last-n-digits, #demonstration-digit-sum, #demo7 {
            overflow: auto;
        }

        #demonstration-digit-sum {
            justify-content: flex-start;
            flex-direction: column;
        }

        #demo7 {
            justify-content: flex-start;
            flex-direction: column;

            h1 {
                font-size: 2.5em;

                #bg-stroke {
                    height: 2.9rem !important;
                }
            }

            &:not(&.single-row) {
                height: 40%;
            }

            .demo-last-row {
                margin-bottom: 0.7rem !important;
            }
        }

        #demonstration-last-n-digits {
            flex-direction: column;
            justify-content: flex-start;

            &.single-row {
                overflow: hidden;
            }

            &.last-3-digits {
                h1 {
                    font-size: 2.5em;
                }

                #bg-stroke {
                    height: 3rem !important;
                }
            }
        }

        #composite-demo {
            flex-direction: column;
            overflow: auto;

            // noinspection Stylelint
            h1 {
                font-size: 2.5em;
            }

            .child.single-row {
                height: 35%;
            }

            .child {
                &:nth-of-type(1) {
                    margin-bottom: 2em;
                }

                &#demonstration-last-n-digits {
                    justify-content: initial;
                    overflow: initial;
                }

                &:not(&#demonstration-last-n-digits) {
                    justify-content: initial;
                    overflow: initial;
                    margin-bottom: 3rem;
                }

                #bg-stroke {
                    height: 2.9rem !important;
                }

                width: 100%;
            }
        }

        // noinspection Stylelint
        #demonstration-last-n-digits, #demonstration-digit-sum, #demo7, #composite-demo {
            width: 85%;
            display: flex;
            align-items: center;
        }

        // noinspection Stylelint
        #demonstration1, #demo7, #composite-demo {
            height: 40%;
        }

        #demonstration-last-n-digits, #demonstration-digit-sum {
            &:not(&.child) {
                height: 40%;
            }
        }

        // noinspection Stylelint
        #demonstration-last-n-digits, #demonstration-digit-sum, #demo7, #demonstration1 {
            $anim-dur: 1.5s;
            $margin-condensed: -0.2em;
            $margin-extended: 0.1em;
            $margin-extra-condensed: -1.1em;
            $margin-extra-extended: 0.3em;

            @mixin translate-left($name, $from, $to) {
                @keyframes #{$name} {
                    from {
                        margin-right: $from;
                    }

                    to {
                        margin-right: $to;
                    }
                }
            }

            @mixin translate-left-right($name, $from, $to) {
                @keyframes #{$name} {
                    from {
                        margin-right: $from;
                        margin-left: $from;
                    }

                    to {
                        margin-left: $to;
                        margin-right: $to;
                    }
                }
            }

            @keyframes translate-right {
                from {
                    margin-left: 0;
                }

                to {
                    margin-left: 0.5em;
                }
            }

            @for $i from 0 to 20 {
                #row#{$i} {
                    margin: 0;
                    opacity: 0;
                    animation: $anim-dur * 0.67 fade-in-slide-down forwards $i * $anim-dur;
                    position: relative;

                    #stroke-container {
                        width: fit-content;

                        &.multi-digit {
                            animation: $color-change-dur translate-right forwards $i * $anim-dur + 1s;
                        }
                    }

                    #bg-stroke {
                        translate: -0.2rem -5%;
                        position: absolute;
                        opacity: 0.4;
                        height: 100%;
                        animation: $color-change-dur bg-stroke-animation forwards $i * $anim-dur + 1s + $color-change-dur;
                    }

                    &.divisor #bg-stroke {
                        background: #0f0;
                    }

                    &.not-divisor #bg-stroke {
                        background: red;
                    }

                    &.demonstration-last-digit {
                        display: flex;
                        align-items: center;
                    }

                    &.division-row span {
                        &:first-of-type {
                            margin-left: 0.3em;
                        }

                        animation: $anim-dur * 0.17 * 3 reveal-operators forwards ($i + 0.83) * $anim-dur * 0.5;
                    }

                    #hidden-equation-left-part {
                        margin-right: -0.4em;
                        margin-left: -0.4em;
                    }

                    #left-most-digits {
                        @include translate-left(translate-left-large, -1.4em, 0.3em);

                        margin-right: -1.4em;
                        animation: $anim-dur * 0.2 translate-left-large forwards ($i + 0.67) * $anim-dur;
                    }

                    #right-most-digit {
                        @include translate-left-right(translate-left-right-large, 0.5em, $margin-extra-extended);

                        margin-left: -1.0em;
                        margin-right: 0.5em;
                        animation: $anim-dur * 0.2 translate-left-right-large forwards ($i + 0.67) * $anim-dur;
                    }

                    .operator, #hidden-equation-left-part, #hidden-equation-right-part {
                        animation: $anim-dur * 0.17 reveal-operators forwards ($i + 0.83) * $anim-dur;
                    }

                    &.division-row span, .operator, #hidden-equation-left-part, #hidden-equation-right-part {
                        opacity: 0;
                    }

                    // Left-most digit (not single-digit number)
                    .digit:first-child:not(:last-child) {
                        @include translate-left(translate-left-small, $margin-condensed, $margin-extended);

                        animation: $anim-dur * 0.17 translate-left-small forwards ($i + 0.67) * $anim-dur;
                        margin-right: $margin-condensed;
                    }

                    // Mid-digit
                    .digit:not(:last-child, :first-child) {
                        margin-left: $margin-condensed;
                        margin-right: $margin-condensed;

                        @include translate-left-right(translate-left-right-small, $margin-condensed, $margin-extended);

                        animation: $anim-dur * 0.17 translate-left-right-small forwards ($i + 0.67) * $anim-dur;
                    }

                    // Right-most digit (not single-digit)
                    .digit:last-child:not(:first-child, .only-child) {
                        margin-left: $margin-condensed;
                        animation: $anim-dur * 0.17 translate-right-extra forwards ($i + 0.67) * $anim-dur;
                    }
                }
            }
        }

        @keyframes translate-right-extra {
            from {
                margin-left: -15%;
            }

            to {
                margin-left: 10%;
            }
        }

        @keyframes reveal-operators {
            0% {
                opacity: 0;
            }

            50% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes fade-in-slide-down {
            0% {
                margin: 0;
                opacity: 0;
            }

            50% {
                margin-top: 0.7em;
                margin-bottom: 0.1em;
                opacity: 0;
            }

            100% {
                margin-top: 0.7em;
                margin-bottom: 0.1em;
                opacity: 1;
            }
        }
    }

    @keyframes bg-stroke-animation {
        from {
            width: 0;
        }

        to {
            width: calc(100% + 0.4rem);
        }
    }
}

@keyframes grow {
    from {
        width: 0;
        height: 0;
    }

    to {
        width: 40em;
        height: 28em;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

@keyframes slide-in {
    from {
        left: 100%;
    }

    to {
        left: 0;
    }
}

@media (width <= 650px), (height <= 650px) {
    #expl-window-container {
        width: 100%;
        height: 100%;
        top: 0 !important;

        &.fade-out {
            width: 100%;
            height: 100%;
            left: 0 !important;
            top: 0 !important;
            transform: translate(0, 0);
            animation: 0.5s fade-out forwards;
        }

        &.grow {
            animation: $open-anim-duration slide-in forwards;
        }

        #expl-window-bg {
            opacity: 0.3;
            animation: none;
            background-size: cover;
        }

        #expl-window {
            animation: none;
            opacity: 1;

            .headline-divisor, .headline-rule {
                padding: 0 1rem;
                line-height: 2.5rem;
                margin-top: 0;
                text-align: center;
            }

            .headline-divisor {
                margin-bottom: 1rem;
            }

            .headline-rule {
                margin-bottom: 1.5rem;
            }

            #demonstration-digit-sum {
                height: unset !important;
                min-height: unset !important;
                overflow: unset;
            }

            #demonstration-last-n-digits, #composite-demo {
                margin-top: 1rem;
            }

            #demo7, #composite-demo {
                #bg-stroke {
                    height: 2.7rem !important;
                }
            }

            #demonstration-digit-sum:not(.child) {
                #bg-stroke {
                    translate: -0.2rem -10% !important;
                }
            }

            #demonstration-last-n-digits {
                height: auto !important;
                min-height: unset !important;

                &.single-row {
                    overflow: visible;
                }

                h1 {
                    // noinspection Stylelint
                    #bg-stroke {
                        translate: -0.2rem -5% !important;
                    }

                    &.multi-row {
                        font-size: 2.3rem;

                        #bg-stroke {
                            height: 2.8rem !important;
                            translate: -0.2rem 5% !important;
                        }
                    }
                }

                &:not(.child) {
                    h1 {
                        line-height: 3.5rem;
                    }

                    &.single-row {
                        #bg-stroke {
                            translate: -0.2rem -10% !important;
                        }
                    }
                }
            }

            #demonstration1 {
                height: unset;

                #stroke-container {
                    height: 4rem;

                    #bg-stroke {
                        height: 100%;
                    }
                }
            }

            #composite-demo {
                height: min-content !important;

                #demonstration-digit-sum, #demonstration-last-n-digits.single-row {
                    #bg-stroke {
                        translate: -0.2rem 1% !important;
                    }
                }

                .child:nth-of-type(1) {
                    margin-bottom: 1rem !important;
                    margin-top: unset;
                }

                .child:nth-of-type(2) {
                    margin-top: 1rem;
                }
            }

            #demo7 {
                height: unset !important;

                // noinspection Stylelint
                h1 {
                    line-height: 3rem;
                    font-size: 2.2rem;
                    line-break: auto !important;

                    #bg-stroke {
                        translate: -0.2rem 1% !important;
                    }
                }
            }

            // noinspection Stylelint
            .divisor, .not-divisor, .division-row, #demo7 h1 {
                line-height: 3.5rem;
                margin-top: 0;
                line-break: anywhere;
            }
        }
    }

    @keyframes fade-in-slide-down {
        0% {
            margin: 0;
            opacity: 0;
        }

        50% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }
}
